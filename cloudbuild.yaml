steps:
  # pull previous image to speed up docker build
  - name: "gcr.io/cloud-builders/docker"
    id: "Pull"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        docker pull gcr.io/$PROJECT_ID/$_IMAGE:latest || exit 0
  # set EXPOSE in Dockerfile
  - name: "gcr.io/cloud-builders/gcloud"
    id: "Set EXPOSE"
    entrypoint: /bin/sh
    args:
      - "-c"
      - |
        sed -i "s/EXPOSE PORT/EXPOSE $_PORT/g" ./$_ENVIRONMENT.Dockerfile
  # build docker image
  - name: "gcr.io/cloud-builders/docker"
    id: "Build"
    args:
      [
        "build",
        "-t",
        "gcr.io/$PROJECT_ID/$_IMAGE:$SHORT_SHA",
        "--cache-from",
        "gcr.io/$PROJECT_ID/$_IMAGE:latest",
        ".",
        '-f',
        './$_ENVIRONMENT.Dockerfile',
      ]
  # push image to container registry
  - name: "gcr.io/cloud-builders/docker"
    id: "Push"
    args:
      - "push"
      - "gcr.io/$PROJECT_ID/$_IMAGE:$SHORT_SHA"
  # set image in deployment.yaml
  - name: "gcr.io/cloud-builders/gcloud"
    id: "Set image in deployment"
    entrypoint: /bin/sh
    args:
      - "-c"
      - |
        sed -i "s/image: IMAGE/image: gcr.io\/$PROJECT_ID\/$_IMAGE:$SHORT_SHA/g" .$_ENVIRONMENT/k8s/deployment.yaml
  # set containerPort in deployment.yaml
  - name: "gcr.io/cloud-builders/gcloud"
    id: "Set containerPort in deployment"
    entrypoint: /bin/sh
    args:
      - "-c"
      - |
        sed -i "s/containerPort: PORT/containerPort: $_PORT/g" .$_ENVIRONMENT/k8s/deployment.yaml
  # set run in deployment.yaml
  - name: "gcr.io/cloud-builders/gcloud"
    id: "Set run in deployment"
    entrypoint: /bin/sh
    args:
      - "-c"
      - |
        sed -i "s/run: IMAGE/run: $_IMAGE/g" .$_ENVIRONMENT/k8s/deployment.yaml
  # set name in deployment.yaml
  - name: "gcr.io/cloud-builders/gcloud"
    id: "Set name in deployment"
    entrypoint: /bin/sh
    args:
      - "-c"
      - |
        sed -i "s/name: IMAGE/name: $_IMAGE/g" .$_ENVIRONMENT/k8s/deployment.yaml
  # set targetPort in service.yaml
  - name: "gcr.io/cloud-builders/gcloud"
    id: "Set targetPort in service"
    entrypoint: /bin/sh
    args:
      - "-c"
      - |
        sed -i "s/targetPort: PORT/targetPort: $_PORT/g" .$_ENVIRONMENT/k8s/service.yaml
  # get kubernetes credentials
  - name: "gcr.io/cloud-builders/gcloud"
    id: "Authenticate kubernetes"
    args:
      [
        "container",
        "clusters",
        "get-credentials",
        "$_CLUSTER",
        "--zone",
        "$_ZONE",
      ]
  # deploy changes to kubernetes config files
  - name: "gcr.io/cloud-builders/kubectl"
    id: "Deploy"
    env: ['CLOUDSDK_COMPUTE_ZONE=$_ZONE', 'CLOUDSDK_CONTAINER_CLUSTER=$_CLUSTER']
    args: ["apply", "-f", ".$_ENVIRONMENT/k8s/"]
  # add latest tag to new image
  - name: "gcr.io/cloud-builders/gcloud"
    id: "Tag"
    args:
      [
        "container",
        "images",
        "add-tag",
        "gcr.io/$PROJECT_ID/$_IMAGE:$SHORT_SHA",
        gcr.io/$PROJECT_ID/$_IMAGE:latest,
      ]